version: "3.8"

services:
  postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    container_name: tradingboard-postgres
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "${DB_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    image: cgeorges/tradingboard-backend:latest
    ports:
      - "3001:3001"
    restart: unless-stopped
    container_name: tradingboard-backend
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - NODE_ENV=production
      - PORT=3001
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - FRONTEND_URL=${FRONTEND_URL:-http://localhost:8080}
    healthcheck:
      test:
        [
          "CMD-SHELL",
          'node -e "const http=require(''http'');const req=http.request({hostname:''localhost'',port:3001,path:''/health'',method:''GET''},res=>{process.exit(res.statusCode===200?0:1)});req.on(''error'',()=>process.exit(1));req.end();"',
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  frontend:
    image: cgeorges/tradingboard-frontend:latest
    ports:
      - "${FRONTEND_PORT:-8080}:80"
    restart: unless-stopped
    container_name: tradingboard-frontend
    depends_on:
      backend:
        condition: service_healthy
    environment:
      - NODE_ENV=production
      - VITE_API_URL=${VITE_API_URL:-http://localhost:3001/api}
      - VITE_POLYGON_API_KEY=${VITE_POLYGON_API_KEY}
      - VITE_OPENAI_API_KEY=${VITE_OPENAI_API_KEY}
      - VITE_WS_URL=${VITE_WS_URL}
      - VITE_API_KEY=${VITE_API_KEY}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
